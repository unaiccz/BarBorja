---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../db/supabase.js';

// Obtener todos los tokens de mesa
const { data: tokens, error } = await supabase
    .from('mesa_tokens')
    .select('*')
    .eq('activo', true)
    .order('mesa_numero');

if (error) {
    console.error('Error fetching mesa tokens:', error);
}

const baseUrl = Astro.url.origin;
---

<Layout title="Acceso R√°pido a Mesas - Desarrollo">
    <div class="dev-container">
        <div class="dev-header">
            <h1>üîß Acceso R√°pido a Mesas (Desarrollo)</h1>
            <p>Selecciona una mesa para acceder directamente con su token</p>
            <div class="warning">
                ‚ö†Ô∏è Esta p√°gina es solo para desarrollo. En producci√≥n, los clientes deben escanear el c√≥digo QR.
            </div>
        </div>

        <div class="mesas-grid">
            {tokens && tokens.map((token) => (
                <div class="mesa-card">
                    <div class="mesa-number">Mesa {token.mesa_numero}</div>
                    <div class="mesa-info">
                        <div class="info-item">
                            <span class="label">Token:</span>
                            <code class="token-short">{token.token.substring(0, 20)}...</code>
                        </div>
                        {token.last_accessed && (
                            <div class="info-item">
                                <span class="label">√öltimo acceso:</span>
                                <span class="date">{new Date(token.last_accessed).toLocaleString('es-ES')}</span>
                            </div>
                        )}
                    </div>
                    <div class="mesa-actions">
                        <a href={`/mesa/access?token=${token.token}`} class="btn-access">
                            üì± Acceder a la Carta
                        </a>
                        <button class="btn-copy" onclick={`copyToClipboard('${baseUrl}/mesa/access?token=${token.token}', ${token.mesa_numero})`}>
                            üìã Copiar URL
                        </button>
                    </div>
                </div>
            ))}
        </div>

        {(!tokens || tokens.length === 0) && (
            <div class="no-tokens">
                <h2>‚ùå No hay tokens disponibles</h2>
                <p>Ejecuta la migraci√≥n <code>migrations/create_mesa_tokens.sql</code> en tu base de datos.</p>
            </div>
        )}

        <div class="dev-footer">
            <a href="/" class="btn-home">üè† Volver al Inicio</a>
            <a href="/admin/mesas-qr" class="btn-admin">‚öôÔ∏è Gesti√≥n de QR</a>
        </div>
    </div>

    <div id="toast" class="toast"></div>
</Layout>

<style>
    .dev-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 40px 20px;
    }

    .dev-header {
        text-align: center;
        color: white;
        margin-bottom: 40px;
    }

    .dev-header h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .dev-header p {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 20px;
    }

    .warning {
        background: rgba(255, 193, 7, 0.2);
        border: 2px solid #ffc107;
        border-radius: 10px;
        padding: 15px;
        max-width: 600px;
        margin: 0 auto;
        font-weight: 500;
    }

    .mesas-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .mesa-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .mesa-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
    }

    .mesa-number {
        font-size: 2rem;
        font-weight: bold;
        color: #667eea;
        margin-bottom: 15px;
        text-align: center;
    }

    .mesa-info {
        margin-bottom: 20px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 10px;
    }

    .info-item {
        margin-bottom: 10px;
        font-size: 0.9rem;
    }

    .info-item:last-child {
        margin-bottom: 0;
    }

    .label {
        font-weight: 600;
        color: #495057;
        display: block;
        margin-bottom: 5px;
    }

    .token-short {
        background: #e9ecef;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.85rem;
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .date {
        color: #6c757d;
        font-size: 0.85rem;
    }

    .mesa-actions {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .btn-access {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 15px;
        border-radius: 10px;
        text-decoration: none;
        text-align: center;
        font-weight: 600;
        font-size: 1.1rem;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .btn-access:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
    }

    .btn-copy {
        background: #28a745;
        color: white;
        padding: 12px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-weight: 600;
        transition: background 0.3s ease;
    }

    .btn-copy:hover {
        background: #218838;
    }

    .no-tokens {
        background: white;
        border-radius: 15px;
        padding: 40px;
        text-align: center;
        max-width: 600px;
        margin: 0 auto;
    }

    .no-tokens h2 {
        color: #dc3545;
        margin-bottom: 15px;
    }

    .no-tokens code {
        background: #f8f9fa;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.9rem;
    }

    .dev-footer {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 40px;
        flex-wrap: wrap;
    }

    .btn-home,
    .btn-admin {
        background: white;
        color: #667eea;
        padding: 15px 30px;
        border-radius: 10px;
        text-decoration: none;
        font-weight: 600;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .btn-home:hover,
    .btn-admin:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    }

    .toast {
        position: fixed;
        bottom: 30px;
        right: 30px;
        background: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        opacity: 0;
        transform: translateY(100px);
        transition: all 0.3s ease;
        z-index: 1000;
        font-weight: 600;
    }

    .toast.show {
        opacity: 1;
        transform: translateY(0);
    }

    @media (max-width: 768px) {
        .dev-header h1 {
            font-size: 1.8rem;
        }

        .mesas-grid {
            grid-template-columns: 1fr;
        }

        .dev-footer {
            flex-direction: column;
            align-items: center;
        }

        .btn-home,
        .btn-admin {
            width: 100%;
            max-width: 300px;
        }
    }
</style>

<script>
    function copyToClipboard(url, mesaNumero) {
        navigator.clipboard.writeText(url).then(() => {
            showToast(`‚úÖ URL de Mesa ${mesaNumero} copiada al portapapeles`);
        }).catch(err => {
            console.error('Error al copiar:', err);
            showToast('‚ùå Error al copiar la URL', 'error');
        });
    }

    function showToast(message, type = 'success') {
        const toast = document.getElementById('toast');
        if (!toast) return;
        
        toast.textContent = message;
        toast.style.background = type === 'error' ? '#dc3545' : '#28a745';
        toast.classList.add('show');
        
        setTimeout(() => {
            toast.classList.remove('show');
        }, 3000);
    }

    // Hacer las funciones globales
    window.copyToClipboard = copyToClipboard;
    window.showToast = showToast;
</script>
